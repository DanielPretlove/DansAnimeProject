@using System.Runtime.InteropServices;
@using AnimeList.Web.UI.Services;
@inject NavigationManager _navMgr

<nav expanded="@_menuExpended" class="nav-menu @active">
    <div class="nav-body-cover" @onclick="() => _menuExpended = false"></div>
    <div class="menu-items-container">
        @if(RuntimeInformation.ProcessArchitecture == Architecture.Wasm)
        {
            <div class="menu-items=expander">
                <button class="inline" @onclick="ToggleMenuExpended">
                    <span>Menu</span><i class="@menuStyle"></i>
                </button>
            </div>
        }

        <div class="menu-items">
            @{
                var menuModel = MenuItemModel.Intialise();
                foreach(var item in menuModel)
                {
                    var match = item.Href == "/" ? NavLinkMatch.All : NavLinkMatch.Prefix;
                    <NavLink href="@item.Href" Match="match">@item.Name</NavLink>
                }

            }
        </div>
    </div>
</nav>

@code {
    private bool _menuExpended = false;
    private string menuStyle = "fa-bars";
    private string active = "";

    public void CloseMenu()
    {
        menuStyle = "fa-bars";
        active = "";
        _menuExpended = false;
        StateHasChanged();
    }

    public void OpenMenu()
    {
        menuStyle = "fa-times";
        active = "active";
        _menuExpended = true;
        StateHasChanged();
    }

    public void ToggleMenuExpended()
    {
        if(_menuExpended)
        {
            CloseMenu();
        }

        else
        {
            OpenMenu();
        }
    }

    protected override void OnInitialized()
    {
        _navMgr.LocationChanged += (obj, args) =>
        {
            _menuExpended = false;
            CloseMenu();
            menuStyle = "fa-bars";
            StateHasChanged();
        };
    }

}